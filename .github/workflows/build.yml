name: Build and upload WebGL artifact
on:
    push:
        branches:
            - main
        paths-ignore:
            - "*.md"
            - "docs/**"
            - ".vscode/**"
            - "LICENSE"
            - ".editorconfig"
            - "git-hooks/**"

    workflow_dispatch:

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Create LFS file list
              run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

            - name: Restore LFS cache
              uses: actions/cache@v3
              id: lfs-cache
              with:
                  path: .git/lfs
                  key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

            - name: Git LFS Pull
              run: |
                  git lfs pull
                  git add .
                  git reset --hard

            - uses: actions/cache@v3
              with:
                  path: Library
                  key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
                  restore-keys: |
                      Library-

            - name: Build Unity project
              uses: game-ci/unity-builder@v4
              env:
                  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
                  UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
                  UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
              with:
                  targetPlatform: WebGL
                  buildsPath: Build

            - name: Log in to GitHub Container Registry
              uses: docker/login-action@v2
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: lowercase repo name
              run: |
                  echo "REPO=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >>${GITHUB_ENV}
                  source ${GITHUB_ENV}

            - name: Build Docker image
              run: |
                  docker build -t ghcr.io/${{ env.REPO }}:latest .

            - name: Push Docker image
              run: |
                  docker push ghcr.io/${{ env.REPO }}:latest

            - name: Notify watchtower
              run: |
                  curl -H "Authorization: Bearer ${{ secrets.WATCHTOWER_HTTP_API_TOKEN }}" https://watchtower.kristn.co.uk/v1/update
